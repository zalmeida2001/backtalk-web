[{"C:\\dev\\backtalk_web\\client\\src\\index.js":"1","C:\\dev\\backtalk_web\\client\\src\\App.js":"2","C:\\dev\\backtalk_web\\client\\src\\pages\\Login.jsx":"3","C:\\dev\\backtalk_web\\client\\src\\pages\\Home.jsx":"4","C:\\dev\\backtalk_web\\client\\src\\pages\\Messages.jsx":"5","C:\\dev\\backtalk_web\\client\\src\\pages\\404.jsx":"6","C:\\dev\\backtalk_web\\client\\src\\pages\\Register.jsx":"7"},{"size":193,"mtime":1612533858520,"results":"8","hashOfConfig":"9"},{"size":751,"mtime":1612533760417,"results":"10","hashOfConfig":"9"},{"size":1581,"mtime":1612878643633,"results":"11","hashOfConfig":"9"},{"size":372,"mtime":1612865701748,"results":"12","hashOfConfig":"9"},{"size":2702,"mtime":1612866051535,"results":"13","hashOfConfig":"9"},{"size":83,"mtime":1612434659954,"results":"14","hashOfConfig":"9"},{"size":1677,"mtime":1612520568388,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1j2zvdk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\dev\\backtalk_web\\client\\src\\index.js",[],["33","34"],"C:\\dev\\backtalk_web\\client\\src\\App.js",[],"C:\\dev\\backtalk_web\\client\\src\\pages\\Login.jsx",[],"C:\\dev\\backtalk_web\\client\\src\\pages\\Home.jsx",[],"C:\\dev\\backtalk_web\\client\\src\\pages\\Messages.jsx",["35"],"import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport '../App.css';\r\n\r\nlet socket;\r\nconst CONNECTION_PORT = 'localhost:3001/';\r\n\r\nfunction App() {\r\n  // Before Login\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [room, setRoom] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n\r\n  // After Login\r\n  const [message, setMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket = io(CONNECTION_PORT);\r\n  }, [CONNECTION_PORT]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList([...messageList, data]);\r\n    });\r\n  });\r\n  const connectToRoom = () => {\r\n    setLoggedIn(true);\r\n    socket.emit(\"join_room\", room);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    let messageContent = {\r\n      room: room,\r\n      content: {\r\n        author: userName,\r\n        message: message,\r\n      },\r\n    };\r\n\r\n    await socket.emit(\"send_message\", messageContent);\r\n    setMessageList([...messageList, messageContent.content]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!loggedIn ? (\r\n        <div className=\"logIn\">\r\n          <div className=\"inputs\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name...\"\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Room...\"\r\n              onChange={(e) => {\r\n                setRoom(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button onClick={connectToRoom}>Enter Chat</button>\r\n        </div>\r\n      ) : (\r\n          <div className=\"chatContainer\">\r\n            <div className=\"messages\">\r\n              {messageList.map((val, key) => {\r\n                return (\r\n                  <div\r\n                    className=\"messageContainer\"\r\n                    id={val.author === userName ? \"You\" : \"Other\"}\r\n                  >\r\n                    <div className=\"messageIndividual\">\r\n                      {val.author}: {val.message}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"messageInputs\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Message...\"\r\n                onChange={(e) => {\r\n                  setMessage(e.target.value);\r\n                }}\r\n              />\r\n              <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\backtalk_web\\client\\src\\pages\\404.jsx",[],["36","37"],"C:\\dev\\backtalk_web\\client\\src\\pages\\Register.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":20,"column":6,"nodeType":"44","endLine":20,"endColumn":23,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'CONNECTION_PORT'. Either exclude it or remove the dependency array. Outer scope values like 'CONNECTION_PORT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: []",{"range":"53","text":"54"},[536,553],"[]"]